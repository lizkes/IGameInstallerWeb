{
  "env": {
    "browser": true,
    "es2021": true
  },
  "ignorePatterns": ["**/*.ejs", "**/*.css"],
  "extends": [
    "eslint:recommended",
    "prettier",
    "plugin:import/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:react/jsx-runtime"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "plugins": ["react", "react-hooks", "@typescript-eslint", "import"],
  "rules": {
    "quotes": ["error", "double"],
    "no-unused-vars": "off",
    "no-restricted-syntax": "off",
    "no-use-before-define": "off",
    "no-shadow": "off",
    "no-param-reassign": "off",
    "no-console": "off",
    "react/require-default-props": "off",
    "react/function-component-definition": [
      "warn",
      { "namedComponents": "arrow-function" }
    ],
    "react/jsx-filename-extension": [
      "error",
      { "extensions": [".jsx", ".tsx"] }
    ],
    "react/sort-comp": [
      "warn",
      {
        "order": ["static-methods", "lifecycle", "everything-else", "render"],
        "groups": {
          "lifecycle": [
            "displayName",
            "propTypes",
            "contextTypes",
            "childContextTypes",
            "mixins",
            "statics",
            "defaultProps",
            "constructor",
            "getDefaultProps",
            "state",
            "getInitialState",
            "getChildContext",
            "getDerivedStateFromProps",
            "componentWillMount",
            "UNSAFE_componentWillMount",
            "componentDidMount",
            "componentWillReceiveProps",
            "UNSAFE_componentWillReceiveProps",
            "shouldComponentUpdate",
            "componentWillUpdate",
            "UNSAFE_componentWillUpdate",
            "getSnapshotBeforeUpdate",
            "componentDidUpdate",
            "componentDidCatch",
            "componentWillUnmount"
          ]
        }
      }
    ],
    "react/jsx-props-no-spreading": "off",
    "import/extensions": ["error", "never"],
    "import/prefer-default-export": "off",
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": true
      }
    ],
    "@typescript-eslint/no-unused-vars": [
      "error",
      { "argsIgnorePattern": "^_" }
    ],
    "@typescript-eslint/no-use-before-define": ["error"],
    "@typescript-eslint/no-shadow": ["error"]
  },
  "settings": {
    "extensions": [".js", ".jsx", ".ts", ".tsx"],
    "react": {
      "version": "detect"
    },
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/resolver": {
      "alias": {
        "map": [
          ["@", "./src"],
          ["@public", "./public"]
        ],
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      },
      "typescript": {
        "alwaysTryTypes": true // always try to resolve types under `<root>@types` directory even it doesn't contain any source code, like `@types/unist`
      }
    }
  }
}
